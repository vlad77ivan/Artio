/*
 * Swagger Petstore
 *
 * This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * API version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/v2/",
		Index,
	},

	Route {
		"Login",
		strings.ToUpper("Post"),
		"/v2/login",
		LoginUser,
	},

	Route {
		"CreatePost",
		strings.ToUpper("Post"),
		"/v2/post",
		CreatePost,
	},

	Route {
		"GetPosts",
		strings.ToUpper("Get"),
		"/v2/post/{username}",
		GetPosts,
	},

	Route{
		"CreateUser",
		strings.ToUpper("Post"),
		"/v2/user",
		CreateUser,
	},

	Route{
		"GetBusiness",
		strings.ToUpper("Get"),
		"/v2/business{businessName}",
		GetBusiness,
	},

	Route{
		"GetExplore",
		strings.ToUpper("Get"),
		"/v2/explore",
		GetExplore,
	},

	Route{
		"GetReviews",
		strings.ToUpper("Get"),
		"/v2/review/{businessName}",
		GetReviews,
	},

	Route{
		"GetUser",
		strings.ToUpper("Get"),
		"/v2/user/{username}",
		GetUser,
	},

	Route{
		"PostBusiness",
		strings.ToUpper("Post"),
		"/v2/business",
		PostBusiness,
	},

	Route{
		"PostReview",
		strings.ToUpper("Post"),
		"/v2/review",
		PostReview,
	},
}
